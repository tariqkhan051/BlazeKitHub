@using System.ComponentModel.DataAnnotations
@using System.Text.Json;

<div>
    <EditForm Model="_form" OnValidSubmit="SubmitForm" Context="context">
        <DataAnnotationsValidator />

        <div class="form-group">
            <label>Name</label>
            <InputText class="form-control" placeholder="Native Rating" @bind-Value="_form.Name" />
            <ValidationMessage For="@(() => _form.Name)" />
        </div>

        <div class="form-group ">
            <label>Description</label>
            <InputText class="form-control" placeholder="Native rating documentation" @bind-Value="_form.Description" />
            <ValidationMessage For="@(() => _form.Description)" />
        </div>

        <div class="form-group">
            <label for="name">URL</label>
            <InputText class="form-control" placeholder="https://test.com" @bind-Value="_form.Url" />
            <ValidationMessage For="@(() => _form.Url)" />
        </div>

        <div class="modal-footer">
            <button id="register-submit" class="btn btn-success" type="submit" disabled="@(!context.IsModified() || !context.Validate())" @onclick="SubmitForm">Add Link</button>
        </div>
    </EditForm>
</div>

@code {
    [CascadingParameter] BlazoredModalInstance BlazoredModal { get; set; } = default!;
    private readonly AddLinkForm _form = new();
    private EditContext context;

    protected override void OnInitialized() => BlazoredModal.SetTitle("Add a new link");

    private async Task SubmitForm()
    {
        await BlazoredModal.CloseAsync(ModalResult.Ok(_form));
    }

    public class AddLinkForm
    {
        [Required(ErrorMessage = "Please provide {0}.")]
        public string? Name { get; set; }

        [Required(ErrorMessage = "Please provide {0}.")]
        public string? Description { get; set; }

        [Required(ErrorMessage = "Please provide URL.")]
        [Url(ErrorMessage = "Please provide a valid URL.")]
        public string? Url { get; set; }
    }
}